<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crowdfunding.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.crowdfunding.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
    <result column="userpswd" property="userpswd" jdbcType="CHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, loginacct, userpswd, username, email, createtime
  </sql>
  <select id="getUser4Page" resultType="com.crowdfunding.pojo.User">
    select id,loginacct,username,email
    from  t_user
    <where>
      <if test="queryTest!=null and queryTest!=''">
        loginacct like concat("%",#{queryTest},"%")
      </if>
    </where>
    limit #{startIndex},#{pageSize}
  </select>
  <select id="getCount" resultType="java.lang.Integer">
    select count(1) from t_user;
  </select>
  <select id="select4Login" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List"/>
    from t_user
    where loginacct=#{loginacct} and userpswd=#{userpswd}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crowdfunding.pojo.User" >
    insert into t_user ( loginacct, userpswd,
      username, email, createtime
      )
    values ( #{loginacct,jdbcType=VARCHAR}, #{userpswd,jdbcType=CHAR},
      #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crowdfunding.pojo.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginacct != null" >
        loginacct,
      </if>
      <if test="userpswd != null" >
        userpswd,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginacct != null" >
        #{loginacct,jdbcType=VARCHAR},
      </if>
      <if test="userpswd != null" >
        #{userpswd,jdbcType=CHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crowdfunding.pojo.User" >
    update t_user
    <set >
      <if test="loginacct != null" >
        loginacct = #{loginacct,jdbcType=VARCHAR},
      </if>
      <if test="userpswd != null" >
        userpswd = #{userpswd,jdbcType=CHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crowdfunding.pojo.User" >
    update t_user
    set loginacct = #{loginacct,jdbcType=VARCHAR},
      userpswd = #{userpswd,jdbcType=CHAR},
      username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>